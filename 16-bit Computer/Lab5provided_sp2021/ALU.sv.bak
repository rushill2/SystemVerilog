// ALU for the SLC3

module ALU(input logic	Clk, Reset, Run, Continue,      									// State transition signals
	input logic [15:0] IR, 
	input logic SR2MUX, ADDR1MUX, MARMUX, DRMUX, SR1MUX,										// MUXes																// Mem IO enable
	input logic [1:0] PCMUX, ADDR2MUX, ALUK,													// MUX selectors
	input logic [15:0] SR1_OUT, SR2val,															// MDR load val
	output logic [15:0] Bus);

logic [5:0] imm_5;
assign imm_5 = IR[4:0];
logic [15:0] SR2, DR_out;

always_comb begin
	case (ALUK)
		2'b01: begin 	// Add
			if(SR2val):
				DR_out = SR1_OUT + imm_5;
			else
				DR_out = SR1_OUT + SR2;
		end

		2'b10: begin   // And
			if (SR2val)
				DR_out = SR1_OUT & imm_5;
			else
				DR_out = SR1_OUT & SR2;
		end

		2'b011 begin    // not
			DR_out = ~DR;
		end
end

always_comb begin
	if(GateALU)
		Bus <= DR_out;
end

endmodule